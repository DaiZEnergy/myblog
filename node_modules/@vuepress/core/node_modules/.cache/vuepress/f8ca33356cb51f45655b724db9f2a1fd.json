{"remainingRequest":"E:\\code\\github\\myblog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\code\\github\\myblog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\code\\github\\myblog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\code\\github\\myblog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\code\\github\\myblog\\docs\\《Vue》笔记\\02.组件\\52.Prop 验证 与 非 Prop 的 Attribute.md?vue&type=template&id=949ed6c2","dependencies":[{"path":"E:\\code\\github\\myblog\\docs\\《Vue》笔记\\02.组件\\52.Prop 验证 与 非 Prop 的 Attribute.md","mtime":1706016824954},{"path":"E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1761792277856},{"path":"E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1761792277856},{"path":"E:\\code\\github\\myblog\\node_modules\\babel-loader\\lib\\index.js","mtime":1761792278496},{"path":"E:\\code\\github\\myblog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1761792275506},{"path":"E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1761792277856},{"path":"E:\\code\\github\\myblog\\node_modules\\vue-loader\\lib\\index.js","mtime":1761792272653},{"path":"E:\\code\\github\\myblog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1761792277945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}