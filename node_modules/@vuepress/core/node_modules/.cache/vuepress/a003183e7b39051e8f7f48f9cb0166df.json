{"remainingRequest":"E:\\code\\github\\myblog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\code\\github\\myblog\\node_modules\\vuepress-theme-vdoing\\util\\postData.js","dependencies":[{"path":"E:\\code\\github\\myblog\\node_modules\\vuepress-theme-vdoing\\util\\postData.js","mtime":1761792273497},{"path":"E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1761792277856},{"path":"E:\\code\\github\\myblog\\node_modules\\babel-loader\\lib\\index.js","mtime":1761792278496}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IHR5cGUsIGNvbXBhcmVEYXRlIH0gZnJvbSAnLi9pbmRleCc7CgovKioKICog6L+H5ruk6Z2e5paH56ug6aG1CiAqIEBwYXJhbSB7QXJyYXl9IHBvc3RzIOaJgOacieaWh+eroOaVsOaNrgogKi8KZXhwb3J0IGZ1bmN0aW9uIGZpbHRlclBvc3RzKHBvc3RzKSB7CiAgcG9zdHMgPSBwb3N0cy5maWx0ZXIoaXRlbSA9PiB7CiAgICBjb25zdCB7CiAgICAgIGZyb250bWF0dGVyOiB7CiAgICAgICAgcGFnZUNvbXBvbmVudCwKICAgICAgICBhcnRpY2xlLAogICAgICAgIGhvbWUKICAgICAgfQogICAgfSA9IGl0ZW07CiAgICByZXR1cm4gIShwYWdlQ29tcG9uZW50IHx8IGFydGljbGUgPT09IGZhbHNlIHx8IGhvbWUgPT09IHRydWUpOyAvLyDlrZjlnKjpobXpnaLnu4Tku7bjgIFhcnRpY2xl5a2X5q615Li6ZmFsc2XvvIzku6Xlj4rpppbpobUKICB9KTsKICByZXR1cm4gcG9zdHM7Cn0KCi8qKgogKiDmjInnva7pobblkozml7bpl7TmjpLluo8KICogQHBhcmFtIHtBcnJheX0gcG9zdHMg6L+H5ruk6Z2e5paH56ug6aG15LmL5ZCO55qE5paH56ug5pWw5o2uCiAqLwpleHBvcnQgZnVuY3Rpb24gc29ydFBvc3RzKHBvc3RzKSB7CiAgcG9zdHMuc29ydCgocHJldiwgbmV4dCkgPT4gewogICAgY29uc3QgcHJldlN0aWNreSA9IHByZXYuZnJvbnRtYXR0ZXIuc3RpY2t5OwogICAgY29uc3QgbmV4dFN0aWNreSA9IG5leHQuZnJvbnRtYXR0ZXIuc3RpY2t5OwogICAgaWYgKHByZXZTdGlja3kgJiYgbmV4dFN0aWNreSkgewogICAgICByZXR1cm4gcHJldlN0aWNreSA9PSBuZXh0U3RpY2t5ID8gY29tcGFyZURhdGUocHJldiwgbmV4dCkgOiBwcmV2U3RpY2t5IC0gbmV4dFN0aWNreTsKICAgIH0gZWxzZSBpZiAocHJldlN0aWNreSAmJiAhbmV4dFN0aWNreSkgewogICAgICByZXR1cm4gLTE7CiAgICB9IGVsc2UgaWYgKCFwcmV2U3RpY2t5ICYmIG5leHRTdGlja3kpIHsKICAgICAgcmV0dXJuIDE7CiAgICB9CiAgICByZXR1cm4gY29tcGFyZURhdGUocHJldiwgbmV4dCk7CiAgfSk7CiAgcmV0dXJuIHBvc3RzOwp9CgovKioKICog5oyJ5pe26Ze05o6S5bqPCiAqIEBwYXJhbSB7QXJyYXl9IHBvc3RzIOi/h+a7pOmdnuaWh+eroOmhteS5i+WQjueahOaWh+eroOaVsOaNrgogKi8KZXhwb3J0IGZ1bmN0aW9uIHNvcnRQb3N0c0J5RGF0ZShwb3N0cykgewogIHBvc3RzLnNvcnQoKHByZXYsIG5leHQpID0+IHsKICAgIHJldHVybiBjb21wYXJlRGF0ZShwcmV2LCBuZXh0KTsKICB9KTsKICByZXR1cm4gcG9zdHM7Cn0KCi8qKgogKiDmjInliIbnsbvlkozmoIfnrb7liIbnu4QKICogQHBhcmFtIHtBcnJheX0gcG9zdHMg5oyJ5pe26Ze05o6S5bqP5LmL5ZCO55qE5paH56ug5pWw5o2uCiAqLwpleHBvcnQgZnVuY3Rpb24gZ3JvdXBQb3N0cyhwb3N0cykgewogIGNvbnN0IGNhdGVnb3JpZXNPYmogPSB7fTsKICBjb25zdCB0YWdzT2JqID0ge307CiAgZm9yIChsZXQgaSA9IDAsIHBvc3RzTCA9IHBvc3RzLmxlbmd0aDsgaSA8IHBvc3RzTDsgaSsrKSB7CiAgICBjb25zdCB7CiAgICAgIGZyb250bWF0dGVyOiB7CiAgICAgICAgY2F0ZWdvcmllcywKICAgICAgICB0YWdzCiAgICAgIH0KICAgIH0gPSBwb3N0c1tpXTsKICAgIGlmICh0eXBlKGNhdGVnb3JpZXMpID09PSAnYXJyYXknKSB7CiAgICAgIGNhdGVnb3JpZXMuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICBpZiAoaXRlbSkgewogICAgICAgICAgLy8g5YiG57G75YC85piv5pyJ5pWI55qECiAgICAgICAgICBpZiAoIWNhdGVnb3JpZXNPYmpbaXRlbV0pIHsKICAgICAgICAgICAgY2F0ZWdvcmllc09ialtpdGVtXSA9IFtdOwogICAgICAgICAgfQogICAgICAgICAgY2F0ZWdvcmllc09ialtpdGVtXS5wdXNoKHBvc3RzW2ldKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogICAgaWYgKHR5cGUodGFncykgPT09ICdhcnJheScpIHsKICAgICAgdGFncy5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgIGlmIChpdGVtKSB7CiAgICAgICAgICAvLyDmoIfnrb7lgLzmmK/mnInmlYjnmoQKICAgICAgICAgIGlmICghdGFnc09ialtpdGVtXSkgewogICAgICAgICAgICB0YWdzT2JqW2l0ZW1dID0gW107CiAgICAgICAgICB9CiAgICAgICAgICB0YWdzT2JqW2l0ZW1dLnB1c2gocG9zdHNbaV0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQogIHJldHVybiB7CiAgICBjYXRlZ29yaWVzOiBjYXRlZ29yaWVzT2JqLAogICAgdGFnczogdGFnc09iagogIH07Cn0KCi8qKgogKiDojrflj5bmiYDmnInliIbnsbvlkozmoIfnrb4KICogQHBhcmFtIHtPYmplY3R9IGdyb3VwUG9zdHMg5oyJ5YiG57G75ZKM5qCH562+5YiG57uE5LmL5ZCO55qE5paH56ug5pWw5o2uCiAqLwpleHBvcnQgZnVuY3Rpb24gY2F0ZWdvcmllc0FuZFRhZ3MoZ3JvdXBQb3N0cykgewogIGNvbnN0IGNhdGVnb3JpZXNBcnIgPSBbXTsKICBjb25zdCB0YWdzQXJyID0gW107CiAgZm9yIChsZXQga2V5IGluIGdyb3VwUG9zdHMuY2F0ZWdvcmllcykgewogICAgY2F0ZWdvcmllc0Fyci5wdXNoKHsKICAgICAga2V5LAogICAgICBsZW5ndGg6IGdyb3VwUG9zdHMuY2F0ZWdvcmllc1trZXldLmxlbmd0aAogICAgfSk7CiAgfQogIGZvciAobGV0IGtleSBpbiBncm91cFBvc3RzLnRhZ3MpIHsKICAgIHRhZ3NBcnIucHVzaCh7CiAgICAgIGtleSwKICAgICAgbGVuZ3RoOiBncm91cFBvc3RzLnRhZ3Nba2V5XS5sZW5ndGgKICAgIH0pOwogIH0KICByZXR1cm4gewogICAgY2F0ZWdvcmllczogY2F0ZWdvcmllc0FyciwKICAgIHRhZ3M6IHRhZ3NBcnIKICB9Owp9"},{"version":3,"names":["type","compareDate","filterPosts","posts","filter","item","frontmatter","pageComponent","article","home","sortPosts","sort","prev","next","prevSticky","sticky","nextSticky","sortPostsByDate","groupPosts","categoriesObj","tagsObj","i","postsL","length","categories","tags","forEach","push","categoriesAndTags","categoriesArr","tagsArr","key"],"sources":["E:/code/github/myblog/node_modules/vuepress-theme-vdoing/util/postData.js"],"sourcesContent":["import { type, compareDate } from './index'\n\n/**\n * 过滤非文章页\n * @param {Array} posts 所有文章数据\n */\nexport function filterPosts (posts) {\n  posts = posts.filter(item => {\n    const { frontmatter: { pageComponent, article, home } } = item\n    return !(pageComponent || article === false || home === true) // 存在页面组件、article字段为false，以及首页\n  })\n  return posts\n}\n\n/**\n * 按置顶和时间排序\n * @param {Array} posts 过滤非文章页之后的文章数据\n */\nexport function sortPosts (posts) {\n  posts.sort((prev, next) => {\n    const prevSticky = prev.frontmatter.sticky\n    const nextSticky = next.frontmatter.sticky\n    if (prevSticky && nextSticky) {\n      return prevSticky == nextSticky ? compareDate(prev, next) : (prevSticky - nextSticky)\n    } else if (prevSticky && !nextSticky) {\n      return -1\n    } else if (!prevSticky && nextSticky) {\n      return 1\n    }\n    return compareDate(prev, next)\n  })\n  return posts\n}\n\n/**\n * 按时间排序\n * @param {Array} posts 过滤非文章页之后的文章数据\n */\nexport function sortPostsByDate (posts) {\n  posts.sort((prev, next) => {\n    return compareDate(prev, next)\n  })\n  return posts\n}\n\n/**\n * 按分类和标签分组\n * @param {Array} posts 按时间排序之后的文章数据\n */\nexport function groupPosts (posts) {\n  const categoriesObj = {}\n  const tagsObj = {}\n\n  for (let i = 0, postsL = posts.length; i < postsL; i++) {\n    const { frontmatter: { categories, tags } } = posts[i]\n    if (type(categories) === 'array') {\n      categories.forEach(item => {\n        if (item) { // 分类值是有效的\n          if (!categoriesObj[item]) {\n            categoriesObj[item] = []\n          }\n          categoriesObj[item].push(posts[i])\n        }\n      })\n    }\n    if (type(tags) === 'array') {\n      tags.forEach(item => {\n        if (item) { // 标签值是有效的\n          if (!tagsObj[item]) {\n            tagsObj[item] = []\n          }\n          tagsObj[item].push(posts[i])\n        }\n      })\n    }\n  }\n  return {\n    categories: categoriesObj,\n    tags: tagsObj\n  }\n}\n\n/**\n * 获取所有分类和标签\n * @param {Object} groupPosts 按分类和标签分组之后的文章数据\n */\nexport function categoriesAndTags (groupPosts) {\n  const categoriesArr = []\n  const tagsArr = []\n\n  for (let key in groupPosts.categories) {\n    categoriesArr.push({\n      key,\n      length: groupPosts.categories[key].length\n    })\n  }\n\n  for (let key in groupPosts.tags) {\n    tagsArr.push({\n      key,\n      length: groupPosts.tags[key].length\n    })\n  }\n  return {\n    categories: categoriesArr,\n    tags: tagsArr\n  }\n}\n"],"mappings":"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"}]}