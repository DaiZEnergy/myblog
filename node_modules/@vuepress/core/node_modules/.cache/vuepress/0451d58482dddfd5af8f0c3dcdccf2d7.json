{"remainingRequest":"E:\\code\\github\\myblog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\github\\myblog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\github\\myblog\\node_modules\\vuepress-theme-vdoing\\layouts\\Layout.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\code\\github\\myblog\\node_modules\\vuepress-theme-vdoing\\layouts\\Layout.vue","mtime":1761792283976},{"path":"E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1761792277856},{"path":"E:\\code\\github\\myblog\\node_modules\\babel-loader\\lib\\index.js","mtime":1761792278496},{"path":"E:\\code\\github\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1761792277856},{"path":"E:\\code\\github\\myblog\\node_modules\\vue-loader\\lib\\index.js","mtime":1761792272653}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}